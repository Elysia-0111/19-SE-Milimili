{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      step: 2,\n      active: 0,\n      statusMsg: '',\n      error: '',\n      ruleForm: {\n        textarea: '请仔细阅读以下协议',\n        agreed: false,\n        name: '',\n        code: '',\n        pwd: '',\n        cpwd: '',\n        email: ''\n      },\n      rules: {\n        agreed: [{\n          validator: (rule, value, callback) => {\n            console.log('value:' + value);\n            if (value !== true) {\n              callback(new Error('请确认同意注册协议'));\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        }],\n        name: [{\n          required: true,\n          type: 'string',\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          type: 'email',\n          message: '请输入邮箱',\n          trigger: 'blur'\n        }],\n        pwd: [{\n          required: true,\n          message: '创建密码',\n          trigger: 'blur'\n        }],\n        cpwd: [{\n          required: true,\n          message: '确认密码',\n          trigger: 'blur'\n        }, {\n          validator: (rule, value, callback) => {\n            if (value === '') {\n              callback(new Error('请再次输入密码'));\n            } else if (value !== this.ruleForm.pwd) {\n              callback(new Error('两次输入密码不一致'));\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  layout: 'blank',\n  methods: {\n    sendMsg: function () {\n      const self = this;\n      let namePass;\n      let emailPass;\n      if (self.timerid) {\n        return false;\n      }\n      this.$refs['ruleForm'].validateField('name', valid => {\n        namePass = valid;\n      });\n      self.statusMsg = '';\n      if (namePass) {\n        return false;\n      }\n      this.$refs['ruleForm'].validateField('email', valid => {\n        emailPass = valid;\n      });\n      // 模拟验证码发送\n      if (!namePass && !emailPass) {\n        let count = 60;\n        self.statusMsg = `验证码已发送,剩余${count--}秒`;\n        self.timerid = setInterval(function () {\n          self.statusMsg = `验证码已发送,剩余${count--}秒`;\n          if (count === 0) {\n            clearInterval(self.timerid);\n          }\n        }, 1000);\n      }\n    },\n    next: function () {\n      if (this.active === 0) {\n        this.$refs['ruleForm'].validateField('agreed', valid => {\n          if (valid === '') {\n            this.active++;\n          }\n        });\n      }\n    },\n    prev: function () {\n      if (--this.active < 0) this.active = 0;\n    },\n    // 模拟登录\n    register: function () {\n      this.$refs['ruleForm'].validate(valid => {\n        if (valid) {\n          setTimeout(this.$router.push('/login'), 2000);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","step","active","statusMsg","error","ruleForm","textarea","agreed","name","code","pwd","cpwd","email","rules","validator","rule","value","callback","console","log","Error","trigger","required","type","message","layout","methods","sendMsg","self","namePass","emailPass","timerid","$refs","validateField","valid","count","setInterval","clearInterval","next","prev","register","validate","setTimeout","$router","push"],"sources":["J:\\university 2.2\\SE\\大作业\\19-SE-Milimili\\前端\\milimili\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\r\n    <div class=\"page-register\">\r\n        <article class=\"header\">\r\n            <header>\r\n                <el-avatar icon=\"el-icon-user-solid\" shape=\"circle\"></el-avatar>\r\n                <span class=\"login\">\r\n                    <em class=\"bold\">已有账号？</em>\r\n                    <a href=\"/login\">\r\n                        <el-button type=\"primary\" size=\"small\">登录</el-button>\r\n                    </a>\r\n                </span>\r\n            </header>\r\n        </article>\r\n        <el-steps :active=\"active\" finish-status=\"success\">\r\n            <el-step title=\"步骤 1\"></el-step>\r\n            <el-step title=\"步骤 2\"></el-step>\r\n        </el-steps>\r\n\r\n        <section>\r\n            <el-form ref=\"ruleForm\" :model=\"ruleForm\" :rules=\"rules\" label-width=\"100px\" class=\"demo-ruleForm\"\r\n                autocomplete=\"off\">\r\n                <div v-if=\"active == 0\">\r\n                    <el-form-item prop=\"textarea\">\r\n                        <el-input :value=\"ruleForm.textarea\" type=\"textarea\" :rows=\"10\" :readonly=\"true\">\r\n                        </el-input>\r\n                    </el-form-item>\r\n                    <el-form-item prop=\"agreed\">\r\n                        <el-checkbox v-model=\"ruleForm.agreed\">同意注册协议</el-checkbox>\r\n                    </el-form-item>\r\n                </div>\r\n                <div v-if=\"active == 1\">\r\n                    <el-form-item label=\"用户名\" prop=\"name\">\r\n                        <el-input v-model=\"ruleForm.name\" />\r\n                    </el-form-item>\r\n                    <el-form-item label=\"邮箱\" prop=\"email\">\r\n                        <el-input v-model=\"ruleForm.email\" />\r\n                        <el-button size=\"mini\" round @click=\"sendMsg\">发送验证码</el-button>\r\n                        <span class=\"status\">{{ statusMsg }}</span>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"验证码\" prop=\"code\">\r\n                        <el-input v-model=\"ruleForm.code\" maxlength=\"4\" />\r\n                    </el-form-item>\r\n                    <el-form-item label=\"密码\" prop=\"pwd\">\r\n                        <el-input v-model=\"ruleForm.pwd\" type=\"password\" />\r\n                    </el-form-item>\r\n                    <el-form-item label=\"确认密码\" prop=\"cpwd\">\r\n                        <el-input v-model=\"ruleForm.cpwd\" type=\"password\" />\r\n                    </el-form-item>\r\n\r\n                </div>\r\n            </el-form>\r\n        </section>\r\n        <div class=\"footer\">\r\n            <el-button v-if=\"active > 0\" type=\"primary\" icon=\"el-icon-arrow-left\" @click=\"prev\">上一步</el-button>\r\n            <el-button v-if=\"active < step - 1\" type=\"primary\" icon=\"el-icon-arrow-right\" @click=\"next\">下一步</el-button>\r\n            <el-button v-if=\"active == step - 1\" type=\"primary\" @click=\"register\">同意以下协议并注册</el-button>\r\n            <div class=\"error\">{{ error }}</div>\r\n        </div>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            step: 2,\r\n            active: 0,\r\n            statusMsg: '',\r\n            error: '',\r\n            ruleForm: {\r\n                textarea: '请仔细阅读以下协议',\r\n                agreed: false,\r\n                name: '',\r\n                code: '',\r\n                pwd: '',\r\n                cpwd: '',\r\n                email: ''\r\n            },\r\n            rules: {\r\n                agreed: [{\r\n                    validator: (rule, value, callback) => {\r\n                        console.log('value:' + value)\r\n                        if (value !== true) {\r\n                            callback(new Error('请确认同意注册协议'))\r\n                        } else {\r\n                            callback()\r\n                        }\r\n                    },\r\n                    trigger: 'blur'\r\n                }],\r\n                name: [{\r\n                    required: true,\r\n                    type: 'string',\r\n                    message: '请输入用户名',\r\n                    trigger: 'blur'\r\n                }],\r\n                email: [{\r\n                    required: true,\r\n                    type: 'email',\r\n                    message: '请输入邮箱',\r\n                    trigger: 'blur'\r\n                }],\r\n                pwd: [{\r\n                    required: true,\r\n                    message: '创建密码',\r\n                    trigger: 'blur'\r\n                }],\r\n                cpwd: [{\r\n                    required: true,\r\n                    message: '确认密码',\r\n                    trigger: 'blur'\r\n                }, {\r\n                    validator: (rule, value, callback) => {\r\n                        if (value === '') {\r\n                            callback(new Error('请再次输入密码'))\r\n                        } else if (value !== this.ruleForm.pwd) {\r\n                            callback(new Error('两次输入密码不一致'))\r\n                        } else {\r\n                            callback()\r\n                        }\r\n                    },\r\n                    trigger: 'blur'\r\n                }]\r\n            }\r\n        }\r\n    },\r\n    layout: 'blank',\r\n    methods: {\r\n        sendMsg: function () {\r\n            const self = this\r\n            let namePass\r\n            let emailPass\r\n            if (self.timerid) {\r\n                return false\r\n            }\r\n            this.$refs['ruleForm'].validateField('name', (valid) => {\r\n                namePass = valid\r\n            })\r\n            self.statusMsg = ''\r\n            if (namePass) {\r\n                return false\r\n            }\r\n            this.$refs['ruleForm'].validateField('email', (valid) => {\r\n                emailPass = valid\r\n            })\r\n            // 模拟验证码发送\r\n            if (!namePass && !emailPass) {\r\n                let count = 60\r\n                self.statusMsg = `验证码已发送,剩余${count--}秒`\r\n                self.timerid = setInterval(function () {\r\n                    self.statusMsg = `验证码已发送,剩余${count--}秒`\r\n                    if (count === 0) {\r\n                        clearInterval(self.timerid)\r\n                    }\r\n                }, 1000)\r\n            }\r\n        },\r\n\r\n        next: function () {\r\n            if (this.active === 0) {\r\n                this.$refs['ruleForm'].validateField('agreed', (valid) => {\r\n                    if (valid === '') {\r\n                        this.active++\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        prev: function () {\r\n            if (--this.active < 0) this.active = 0\r\n        },\r\n\r\n        // 模拟登录\r\n        register: function () {\r\n            this.$refs['ruleForm'].validate((valid) => {\r\n                if (valid) {\r\n                    setTimeout(\r\n                        this.$router.push('/login'), 2000\r\n                    )\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n  \r\n<style  rel=\"stylesheet/scss\" lang=\"scss\">\r\n.page-register {\r\n    .header {\r\n        //border-bottom: 2px solid rgb(235, 232, 232);\r\n        min-width: 980px;\r\n        color: #666;\r\n\r\n        header {\r\n            margin: 0 auto;\r\n            padding: 10px 0;\r\n            width: 980px;\r\n\r\n            .login {\r\n                float: right;\r\n            }\r\n\r\n            .bold {\r\n                font-style: normal;\r\n            }\r\n        }\r\n    }\r\n\r\n    .register {\r\n        color: #1890ff;\r\n    }\r\n\r\n    a {\r\n        color: #1890ff;\r\n        text-decoration: none;\r\n        background-color: transparent;\r\n        outline: none;\r\n        cursor: pointer;\r\n        transition: color 0.3s;\r\n    }\r\n\r\n    >section {\r\n        margin: 0 auto 30px;\r\n        padding-top: 30px;\r\n        width: 980px;\r\n        min-height: 300px;\r\n        padding-right: 550px;\r\n        box-sizing: border-box;\r\n\r\n        .status {\r\n            font-size: 12px;\r\n            margin-left: 20px;\r\n            color: #e6a23c;\r\n        }\r\n\r\n        .error {\r\n            color: red;\r\n        }\r\n    }\r\n\r\n    .footer {\r\n        text-align: center;\r\n    }\r\n}\r\n</style>\r\n  \r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}